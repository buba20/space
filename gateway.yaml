apiVersion: v1
data:
  nginx.conf: |
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;

    events {
      worker_connections  4096;  ## Default: 1024
    }

    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      default_type application/octet-stream;
      log_format  main '$remote_addr - $remote_user [$time_local]  $status ' '"$request" $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"';

      include /opt/bitnami/nginx/conf/resolvers.conf;

      map $status $loggable {
        ~^[23]  0;
        default 1;
      }
      access_log   /dev/stderr  main  if=$loggable;

      sendfile     on;
      tcp_nopush   on;

      # Ensure that X-Scope-OrgID is always present, default to the no_auth_tenant for backwards compatibility when multi-tenancy was turned off.
      map $http_x_scope_orgid $ensured_x_scope_orgid {
        default $http_x_scope_orgid;
        "" "anonymous";
      }

      server {
        listen             8080;

        location = / {
          return 200 'OK';
          auth_basic off;
        }

        proxy_set_header X-Scope-OrgID $ensured_x_scope_orgid;

        # Distributor endpoints
        location /distributor {
          proxy_pass      http://mimir-grafana-mimir-distributor-headless.default.svc.cluster.local:8080$request_uri;
        }
        location = /api/v1/push {
          proxy_pass      http://mimir-grafana-mimir-distributor-headless.default.svc.cluster.local:8080$request_uri;
        }
        location /otlp/v1/metrics {
          proxy_pass      http://mimir-grafana-mimir-distributor-headless.default.svc.cluster.local:8080$request_uri;
        }
        # Rest of /prometheus goes to the query frontend
        location /prometheus {
          proxy_pass      http://mimir-grafana-mimir-query-frontend.default.svc.cluster.local:8080$request_uri;
        }
        # Buildinfo endpoint can go to any component
        location = /api/v1/status/buildinfo {
          proxy_pass      http://mimir-grafana-mimir-query-frontend.default.svc.cluster.local:8080$request_uri;
        }
        # Compactor endpoint for uploading blocks
        location /api/v1/upload/block/ {
          proxy_pass      http://mimir-grafana-mimir-compactor.default.svc.cluster.local:8080$request_uri;
        }
      }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: mimir
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2023-12-20T11:44:34Z"
  labels:
    app.kubernetes.io/component: gateway
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-mimir
    app.kubernetes.io/part-of: grafana-mimir
    app.kubernetes.io/version: 1.25.3
    helm.sh/chart: grafana-mimir-0.7.8
  name: mimir-grafana-mimir-gateway
  namespace: default
  resourceVersion: "23126"
  uid: 1d08cded-cd31-4362-adc6-9765f85fd3dc
